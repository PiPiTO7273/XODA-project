
*DrawColumnGraph
	SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
	DrawGraph 784+EasePosX,EasePosY,hdximg(ibg_MusicSelect_Item),TRUE	//背景

	SetDrawBlendMode DX_BLENDMODE_ALPHA,256
	DrawStringToHandle 880+EasePosX,EasePosY+8,Libarr_Title(CursorLevID,DrawColumnID),GetColor(255,255,255),hdxfont(fNoto_m16)	//タイトル

	LevColorCode=GetDifficultyColor(Libarr_Difficulty(CursorLevID,DrawColumnID))
	tmpstr=str(Libarr_Level(CursorLevID,DrawColumnID))
	DrawStringXCenterToHandle 784+EasePosX,EasePosY+10,tmpstr,80,LevColorCode,hdxfont(fSQ_20)	//難易度

	//クリアの種類
	dim hBadge_ClearType
	switch Libarr_Rec_ClearType(CursorLevID,DrawColumnID)
		case"ALL EXCELLENT":hBadge_ClearType=hdximg(iBadge_AllEx):swbreak
		case"FULL COMBO":hBadge_ClearType=hdximg(iBadge_FullCombo):swbreak
		case"MADNESS":hBadge_ClearType=hdximg(iBadge_Madness):swbreak
		case"HARD":hBadge_ClearType=hdximg(iBadge_Hard):swbreak
		case"CLEAR":hBadge_ClearType=hdximg(iBadge_Clear):swbreak
		case"ASSIST":hBadge_ClearType=hdximg(iBadge_Assist):swbreak
		case"FAILED":hBadge_ClearType=hdximg(iBadge_Failed):swbreak
		default:hBadge_ClearType=hdximg(iBadge_NoData):swbreak
	swend
	DrawGraph 784+323+EasePosX,EasePosY+8,hBadge_ClearType,TRUE

	//スコアランク
	dim hBadge_Rank
	switch Libarr_Rec_ScoreRank(CursorLevID,DrawColumnID)
		case RANK_ID_SSS:hBadge_Rank=hdximg(iBadge_SSS):swbreak
		case RANK_ID_SS:hBadge_Rank=hdximg(iBadge_SS):swbreak
		case RANK_ID_S:hBadge_Rank=hdximg(iBadge_S):swbreak
		case RANK_ID_AAA:hBadge_Rank=hdximg(iBadge_AAA):swbreak
		case RANK_ID_AA:hBadge_Rank=hdximg(iBadge_AA):swbreak
		case RANK_ID_A:hBadge_Rank=hdximg(iBadge_A):swbreak
		case RANK_ID_B:hBadge_Rank=hdximg(iBadge_B):swbreak
		case RANK_ID_C:hBadge_Rank=hdximg(iBadge_C):swbreak
		case RANK_ID_D:hBadge_Rank=hdximg(iBadge_D):swbreak
	swend
	if Libarr_Rec_Score(CursorLevID,DrawColumnID)==0 :hBadge_Rank=-1	//スコアが0の場合は除外
	if hBadge_Rank!-1 :DrawGraph 784+408+EasePosX,EasePosY+10,hBadge_Rank,TRUE

	return

*DrawMusicSelectNav
	if JumpSceneFlag==FALSE {
		//ナビゲーション
			if decideFlag==FALSE {
				setease 0,256,ease_cubic_out
				EaseAlpha=getease(SceneCount,10)
				setease -32,0,ease_cubic_out
				EasePosX=getease(SceneCount,10)
			} else {
				setease 256,0,ease_cubic_out
				EaseAlpha=getease(decideFrameCount-10,10)
				setease 0,-32,ease_cubic_out
				EasePosX=getease(decideFrameCount-10,10)
			}
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,EaseAlpha
			DrawGraph 32+EasePosX,16,hdximg(iNav_MusicSelect),TRUE

		//案内文字列（背景）
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
			DrawGraph 32,67,hdximg(ibg_Nav),TRUE

		//案内文字列
			SetDrawBlendMode DX_BLENDMODE_ALPHA,256
			DrawStringToHandle 48,72,"プレーする楽曲を選択してください。",GetColor(230,230,230),hdxfont(fNoto_b12)
	}

	return

#deffunc SetAudioFX int _sndid,int _id

	BASS_ChannelRemoveFX hbasssnd(_sndid),hbassfx(_sndid)
	BASS_FXReset hbassfx(_sndid)

	hbassfx(_sndid)=SetAudioFXtohandle(hbasssnd(_sndid),_id)

	return

#defcfunc SetAudioFXtohandle int _hwnd,int _id
	dim fxprm:dim fxhwnd
	switch _id
		case FX_BASSBOOST
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_PARAMEQ)
			fxprm=tofloat(120.0),tofloat(20.0),tofloat(4.0)
		swbreak
		case FX_STRONGBASS
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_PARAMEQ)
			fxprm=tofloat(120.0),tofloat(20.0),tofloat(6.0)
		swbreak
		case FX_MAXIMUMBASS
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_PARAMEQ)
			fxprm=tofloat(100.0),tofloat(30.0),tofloat(8.0)
		swbreak
		case FX_TREBLEBOOST
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_PARAMEQ)
			fxprm=tofloat(12000.0),tofloat(20.0),tofloat(5.0)
		swbreak
		case FX_2000HZBOOST
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_PARAMEQ)
			fxprm=tofloat(2000.0),tofloat(20.0),tofloat(8.0)
		swbreak
		case FX_4000HZBOOST
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_PARAMEQ)
			fxprm=tofloat(4000.0),tofloat(20.0),tofloat(8.0)
		swbreak
		case FX_COMPRESSOR
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_COMPRESSOR)
			fxprm=tofloat(5.0),tofloat(10.0),tofloat(200.0),tofloat(-20.0),tofloat(3.0),tofloat(4.0)
		swbreak
		case FX_EXTRACOMPRESSOR
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_COMPRESSOR)
			fxprm=tofloat(10.0),tofloat(10.0),tofloat(200.0),tofloat(-20.0),tofloat(3.0),tofloat(4.0)
		swbreak
		case FX_DISTORTION
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_DISTORTION)
			fxprm=tofloat(-18.0),tofloat(10.0),tofloat(5000.0),tofloat(5000.0),tofloat(8000.0)
		swbreak
		case FX_CHORUS
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_CHORUS)
			fxprm=tofloat(50.0),tofloat(10.0),tofloat(25.0),tofloat(1.1),1,tofloat(16.0),BASS_DX8_PHASE_90
		swbreak
		case FX_FLANGER
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_FLANGER)
			fxprm=tofloat(50.0),tofloat(100.0),tofloat(-50.0),tofloat(0.25),1,tofloat(2.0),BASS_DX8_PHASE_ZERO
		swbreak
		case FX_EXTRAFLANGER
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_FLANGER)
			fxprm=tofloat(80.0),tofloat(100.0),tofloat(-50.0),tofloat(0.25),1,tofloat(2.0),BASS_DX8_PHASE_ZERO
		swbreak
		case FX_ECHO
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_ECHO)
			fxprm=tofloat(30.0),tofloat(20.0),tofloat(80.0),tofloat(90.0),0
		swbreak
		case FX_EXTRAECHO
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_ECHO)
			fxprm=tofloat(40.0),tofloat(30.0),tofloat(90.0),tofloat(105.0),0
		swbreak
		case FX_SILENT
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_VOLUME)
			fxprm=tofloat(0.0),tofloat(1.0),tofloat(0.0),tofloat(0.0)
		swbreak
		case FX_LOUDPLUS
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_VOLUME)
			fxprm=tofloat(2.0),tofloat(1.0),tofloat(0.0),tofloat(0.0)
		swbreak
		case FX_LOUDHALF
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_VOLUME)
			fxprm=tofloat(0.5),tofloat(1.0),tofloat(0.0),tofloat(0.0)
		swbreak
		case FX_REVERB
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_REVERB)
			fxprm=tofloat(-2.0),tofloat(-8.0),tofloat(1000.0),tofloat(0.001)
		swbreak
		case FX_EXTRAREVERB
			fxhwnd=BASS_ChannelSetFX(_hwnd,BASS_FX_DX8_REVERB)
			fxprm=tofloat(-2.0),tofloat(-4.0),tofloat(1000.0),tofloat(0.001)
		swbreak
	swend
	BASS_FXSetParameters fxhwnd,fxprm
	return fxhwnd