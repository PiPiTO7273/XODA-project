
*Scene_Play

	//キー判定
		dim JudgeFlag,3
		dim KeyFlag,4
		if CheckHitKey(KEY_INPUT_D)==TRUE :KeyFlag(0)=TRUE
		if CheckHitKey(KEY_INPUT_F)==TRUE :KeyFlag(1)=TRUE
		if CheckHitKey(KEY_INPUT_J)==TRUE :KeyFlag(2)=TRUE
		if CheckHitKey(KEY_INPUT_K)==TRUE :KeyFlag(3)=TRUE

	//デバッグキー判定
		dim DebugKeyFlag,12
		repeat 12
			DebugKeyFlag(cnt)=CheckHitKey(KEY_INPUT_F3+cnt)
			if DebugbfKeyFlag(cnt)==FALSE&DebugKeyFlag(cnt)==TRUE {
				switch cnt
					case DEBUG_AUTOPLAY
						AutoPlayFlag^1
						AddDebugConsole STYLE_NORMAL,"AUTOPLAYを["+ConvBooltoStr(AutoPlayFlag)+"]に変更"
					swbreak
				swend
			}
			DebugbfKeyFlag(cnt)=DebugKeyFlag(cnt)
		loop

	//判定開始フラグ
		repeat 4
			//押し始め
			if bfKeyFlag(cnt)==FALSE&KeyFlag(cnt)==TRUE :JudgeFlag(ConvKeyIDtoLaneID(cnt))=TRUE
			//離した
			if HoldFlag(ConvKeyIDtoLaneID(cnt))==TRUE&bfKeyFlag(cnt)==TRUE&KeyFlag(cnt)==FALSE :JudgeFlag(ConvKeyIDtoLaneID(cnt))=TRUE

			if KeyFlag(cnt)==TRUE {
				LaneEffCount(ConvKeyIDtoLaneID(cnt))=0
			}
			bfKeyFlag(cnt)=KeyFlag(cnt)
		loop

	//判定処理
		dim ProgLaneID
		repeat 3
			ProgLaneID=cnt
			if JudgeFlag(cnt)==TRUE {
				//判定処理
				dim NearNoteDif:dim NearNoteID:dim curNoteDif
				NearNoteDif=JUDGE_WIDTH_MISS
				NearNoteID=-1
				if HoldFlag(ProgLaneID)==FALSE {
					repeat hitobjMax
						if hitJudgeFlag(cnt)==TRUE :continue
						if hitobjLaneID(cnt)!ProgLaneID :continue
						curNoteDif=PlayCountMS-hitobjTiming(cnt)
						if abs(curNoteDif)<abs(NearNoteDif) {
							NearNoteDif=curNoteDif
							NearNoteID=cnt
						}
					loop
				} else {
					NearNoteID=HoldNoteID(ProgLaneID)+1
					NearNoteDif=PlayCountMS-hitobjTiming(HoldNoteID(ProgLaneID)+1)
				}

				dim JudgeRes
				JudgeRes=JUDGE_RES_EMPTY

				if HoldFlag(ProgLaneID)==TRUE|NearNoteID!-1 {
					//判定別
						if abs(NearNoteDif)<JUDGE_WIDTH_MISS :JudgeRes=JUDGE_RES_MISS
						if abs(NearNoteDif)<JUDGE_WIDTH_BAD :JudgeRes=JUDGE_RES_BAD
						if abs(NearNoteDif)<JUDGE_WIDTH_NICE :JudgeRes=JUDGE_RES_NICE
						if abs(NearNoteDif)<JUDGE_WIDTH_GREAT :JudgeRes=JUDGE_RES_GREAT
						if abs(NearNoteDif)<JUDGE_WIDTH_EXCELLENT :JudgeRes=JUDGE_RES_EXCELLENT

						UpdateJudgeValue JudgeRes

					//ホールド判定
						if hitobjType(NearNoteID)==HITOBJ_HOLDSTART {
							if JudgeRes==JUDGE_RES_MISS {
								hitJudgeFlag(NearNoteID+1)=TRUE
								UpdateJudgeValue JUDGE_RES_MISS
							} else {
								HoldFlag(hitobjLaneID(NearNoteID))=TRUE
								HoldNoteID(hitobjLaneID(NearNoteID))=NearNoteID
								HoldCount(hitobjLaneID(NearNoteID))=0
							}
						}
						if hitobjType(NearNoteID)==HITOBJ_HOLDEND :HoldFlag(hitobjLaneID(NearNoteID))=FALSE

					//爆発エフェクト
						BombFlag(hitobjLaneID(NearNoteID))=TRUE
						BombCount(hitobjLaneID(NearNoteID))=0

					//フラグ処理
						hitJudgeFlag(NearNoteID)=TRUE
						JudgeResCount=0
				}

				//SE
					if JudgeRes==JUDGE_RES_EMPTY {
						PlaySE hbasssnd(sndHitempty)
					} else {
						PlaySE hbasssnd(sndHitobj)
					}
			}
		loop

	//背景
		setease 0,256,ease_linear
		SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(SceneCount,100)
		;DrawBox 0,0,DispWidth,DispHeight,GetColor(0,0,0),TRUE
		DrawGraph -bgScrollX,0,exdBGhwnd,FALSE
		DrawGraph DispWidth*2-bgScrollX,0,exdBGhwnd,FALSE

		bgScrollX+10
		if bgScrollX>=1280*2 :bgScrollX=0

	//グリッド
		SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,10
		DrawGraph 0,0,hdximg(iPlay_bg_Grid),TRUE

	//パーティクル
	/*switch getpath(chartBackground,16)
		case"laser"
			DrawParticle 150,hdximg(iParticle_Laser_0),256,32,30,80,35
			DrawParticle 50,hdximg(iParticle_Laser_1),128,20,50,200,20
			DrawParticle 75,hdximg(iParticle_Laser_2),225,40,40,140,18
		swbreak
		case"trick"
			DrawParticle 200,hdximg(iParticle_Trick_2),50,20,128,70,20
			DrawParticle 100,hdximg(iParticle_Trick_2),50,20,64,210,12
			DrawParticle 256,hdximg(iParticle_Trick_1),64,100,64,100,15
			DrawParticle 256,hdximg(iParticle_Trick_0),64,100,64*4,100,16
		swbreak
	swend*/
	repeat exdFuncMax
		DrawParticle exdFuncAlpha(cnt),exdFuncHWND(cnt),exdFuncWidth(cnt),exdFuncHeight(cnt),exdFuncMargin(cnt),exdFuncPosY(cnt),exdFuncSpeed(cnt)
	loop

	//ムービー処理
		if bgMovieFlag==TRUE {
			//ムービー再生開始
			if MoviePlayFlag==FALSE&PlayCountMS>chartMOVIEoffset {
				PlayMovieToGraph hdximg(iPlay_bg_Movie)
				MoviePlayFlag=TRUE
			}
			//ムービー描画
			if MoviePlayFlag==TRUE {
				if chartMOVIEposX==0&chartMOVIEposY=0&chartMOVIEwidth=0&chartMOVIEheight=0&chartMOVIEalpha==0 {
					SetDrawBlendMode DX_BLENDMODE_ALPHA,256/2
					DrawModiGraph 200,0,DispWidth-200,0,DispWidth-400,256,400,256,hdximg(iPlay_bg_Movie),TRUE
				} else {
					SetDrawBlendMode DX_BLENDMODE_ADD,chartMOVIEalpha
					DrawExtendGraph chartMOVIEposX,chartMOVIEposY,chartMOVIEposX+chartMOVIEwidth,chartMOVIEposY+chartMOVIEheight,hdximg(iPlay_bg_Movie),TRUE
				}
			}
		}

	//ビジュアライザー
		SetDrawScreen hdximg(iPlay_Visualizer)
			ClearDrawScreen
			SetDrawBlendMode DX_BLENDMODE_ALPHA,256
			dim bgmFFTbuf,4096:dim bgmFFTline
			BASS_ChannelGetData hplaybgm,varptr(bgmFFTbuf),BASS_DATA_FFT8192

			//色指定
				if exdVisColor(0)==-1&exdVisColor(1)==-1&exdVisColor(2)==-1 {
					setease 0,191,ease_linear+ease_loop
					hsvcolor getease(SceneCount,200),75,255
				} else {
					color exdVisColor(0),exdVisColor(1),exdVisColor(2)
				}

			repeat 32
				bgmFFTline=int(todouble(bgmFFTbuf(128/32*cnt))*2500)
				if bgmFFTline<100 :bgmFFTline*4
				DrawBox cnt*(1024/32),512-bgmFFTline,(cnt+1)*(1024/32)-2,512,GetColor(ginfo_r,ginfo_g,ginfo_b),TRUE
			loop
		SetDrawScreen DX_SCREEN_BACK
		SetDrawBlendMode DX_BLENDMODE_ALPHA,50
		DrawModiGraph 256,400,DispWidth-256,400,DispWidth,DispHeight,0,DispHeight,hdximg(iPlay_Visualizer),TRUE

	//パーティクル処理
		repeat partline_Max
			if partline_Flag(cnt)==FALSE :continue
			//描画
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,150
			DrawGraph partline_PosX(cnt),partline_PosY(cnt),hdximg(iParticle_Line_256_White),TRUE
			partline_PosX(cnt)-partline_Speed(cnt)
			if partline_PosX(cnt)<-256 :partline_Flag(cnt)=FALSE
		loop
		repeat partfade_Max
			if partfade_Flag(cnt)==FALSE :continue
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,25
			DrawGraph partfade_PosX(cnt),0,hdximg(iParticle_Fade_White),TRUE
			partfade_PosX(cnt)-10
			if partfade_PosX(cnt)<-256 :partfade_Flag(cnt)=FALSE
		loop

	//BPM
		ddim curBPM,1
		repeat bpmpointMax
			if PlayCountMS>bpmpointTiming(cnt) :curBPM=bpmpointValue(cnt)
		loop
		if curBPM==0.0 :curBPM=chartDefBPM

	//iUI_bg_SongInfo
		setease -360,0,ease_cubic_out
		EasePosX=getease(SceneCount,30)
		setease -150,0,ease_cubic_out
		EasePosY=getease(SceneCount,30)
		setease 0,256,ease_cubic_out
		EaseAlpha=getease(SceneCount,30)

		SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,EaseAlpha
		DrawGraph EasePosX,EasePosY,hdximg(iUI_bg_SongInfo),TRUE

		if SceneCount>20 {
			setease 0,256,ease_cubic_out
			SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(SceneCount-20,20)
			setease -64,0,ease_cubic_out
			DrawGraph getease(SceneCount-20,20),0,hdximg(iUI_tx_SongInfo),TRUE
		}

	//iUI_bg_Profile
		setease -300,0,ease_cubic_out
		EasePosX=getease(SceneCount,35)
		setease 720,600,ease_cubic_out
		EasePosY=getease(SceneCount,35)
		setease 0,256,ease_cubic_out
		EaseAlpha=getease(SceneCount,35)

		SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,EaseAlpha
		DrawGraph EasePosX,EasePosY,hdximg(iUI_bg_Profile),TRUE

		if SceneCount>20 {
			setease 0,256,ease_cubic_out
			SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(SceneCount-20,15)
			setease -32,0,ease_cubic_out
			DrawGraph getease(SceneCount-20,15),600,hdximg(iUI_tx_Profile),TRUE
		}

	//iUI_bg_Score
		setease DispWidth,960,ease_cubic_out
		EasePosX=getease(SceneCount,40)
		setease -220,0,ease_cubic_out
		EasePosY=getease(SceneCount,40)
		setease 0,256,ease_cubic_out
		EaseAlpha=getease(SceneCount,40)

		SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,EaseAlpha
		DrawGraph EasePosX,EasePosY,hdximg(iUI_bg_Score),TRUE

		//スコア数値
			if SceneCount>20 {
				setease 0,256,ease_cubic_out
				SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(SceneCount-20,20)

				setease ScoreEaseA,ScoreEaseB,ease_linear
				ScoreEaseVal=getease(JudgeResCount,30)

				setease -16,0,ease_cubic_out
				DrawStringToHandle 1100,16+getease(SceneCount-20,20),strf("%08d",ScoreEaseVal),GetColor(240,240,240),hdxfont(fPier_r32)
			}
		//判定された数・暫定ランク
			if SceneCount>50 {
				setease 1116+32,1116,ease_cubic_out
				EasePosX=getease(SceneCount-100,20)
				setease 0,256,ease_cubic_out
				EaseAlpha=getease(SceneCount-100,20)

				SetDrawBlendMode DX_BLENDMODE_ALPHA,EaseAlpha
				//Excellent
				DrawStringToHandle EasePosX,83,strf("%04d",numExcellent),GetColor(20,20,20),hdxfont(fMplus_15)
				//Great
				DrawStringToHandle EasePosX,106,strf("%04d",numGreat),GetColor(20,20,20),hdxfont(fMplus_15)
				//Nice
				DrawStringToHandle EasePosX,129,strf("%04d",numNice),GetColor(20,20,20),hdxfont(fMplus_15)
				//Bad
				DrawStringToHandle EasePosX,152,strf("%04d",numBad),GetColor(20,20,20),hdxfont(fMplus_15)
				//Miss
				DrawStringToHandle EasePosX,175,strf("%04d",numMiss),GetColor(20,20,20),hdxfont(fMplus_15)

				//暫定ランク
				sdim curRank
				curRank="E"
				if double(curScore)>double(mxmScore)*(double(RANK_SCORE_D)/10000000.0) :curRank="D"
				if double(curScore)>double(mxmScore)*(double(RANK_SCORE_C)/10000000.0) :curRank="C"
				if double(curScore)>double(mxmScore)*(double(RANK_SCORE_B)/10000000.0) :curRank="B"
				if double(curScore)>double(mxmScore)*(double(RANK_SCORE_A)/10000000.0) :curRank="A"
				if double(curScore)>double(mxmScore)*(double(RANK_SCORE_AA)/10000000.0) :curRank="AA"
				if double(curScore)>double(mxmScore)*(double(RANK_SCORE_AAA)/10000000.0) :curRank="AAA"
				if double(curScore)>double(mxmScore)*(double(RANK_SCORE_S)/10000000.0) :curRank="S"
				if double(curScore)>double(mxmScore)*(double(RANK_SCORE_SS)/10000000.0) :curRank="SS"
				if double(curScore)>double(mxmScore)*(double(RANK_SCORE_SSS)/10000000.0) :curRank="SSS"
				if curScore==mxmScore :curRank="MAX"

				DrawStringXCenterToHandle 1180,128,curRank,78,GetColor(25,25,25),hdxfont(fPier_r20)
			}

	//iUI_bg_Gauge
		setease DispWidth,580,ease_cubic_out
		EasePosX=getease(SceneCount,25)
		setease DispHeight,640,ease_cubic_out
		EasePosY=getease(SceneCount,25)
		setease 0,256,ease_cubic_out
		EaseAlpha=getease(SceneCount,25)

		SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,EaseAlpha
		DrawGraph EasePosX,EasePosY,hdximg(iUI_bg_Gauge),TRUE

		if SceneCount>22 {
			//ゲージ数値
			sdim GaugeValStr
			GaugeValStr=str(int(curGaugeVal))	//小数点以下切り捨て＋文字列に変換
			dim TxDrawPosX		//描画位置
			TxDrawPosX=1255-(20*strlen(GaugeValStr))
			setease 32,0,ease_cubic_out
			EasePosX=TxDrawPosX+getease(SceneCount-22,15)

			DrawStringToHandle EasePosX,655,GaugeValStr,GetColor(15,15,15),hdxfont(fSQ_20)

			setease 16,0,ease_cubic_out
			EasePosX=getease(SceneCount-22,20)
			//最大コンボ
			DrawStringToHandle 740+EasePosX,655,str(curMaxCombo),GetColor(25,25,25),hdxfont(fPier_r20)

			//BPM値
			DrawStringToHandle 880+EasePosX,655,str(int(curBPM)),GetColor(25,25,25),hdxfont(fPier_r20)

			//ゲージ描画
			dim hGaugeImg
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
			repeat int(curGaugeVal)
				switch GaugeType
					case GAUGE_ASSIST:hGaugeImg=hdxarr_Gauge_Assist(cnt):swbreak
					case GAUGE_NORMAL:hGaugeImg=hdxarr_Gauge_Normal(cnt):swbreak
					case GAUGE_HARD:hGaugeImg=hdxarr_Gauge_Hard(cnt):swbreak
					case GAUGE_MADNESS:hGaugeImg=hdxarr_Gauge_Madness(cnt):swbreak
				swend
				DrawGraph 580+7*cnt,688,hGaugeImg,TRUE
			loop
		}

	//レーンエフェクト
		repeat 3
			setease 150,0,ease_cubic_out
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(LaneEffCount(cnt),15)
			setease 1,0.5,ease_cubic_out
			EaseHeight=int(48.0*geteasef(LaneEffCount(cnt),15))
			DrawExtendGraph 224,288+cnt*48+48/2-EaseHeight/2,224+512,288+cnt*48+48/2+EaseHeight/2,hdximg(iLaneEffect),TRUE
		loop

	//ノーツ処理
		SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,100
		DrawGraph 200,DispHeight/2-48/2-48,hdximg(iHitCircle),TRUE
		repeat hitobjMax
			if hitJudgeFlag(cnt)==TRUE :continue
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
			hitobjPosition(cnt)+(1000.0/60.0*curBPM/1000.0)
			hitobjDrawPos(cnt)=200-(hitobjPosition(cnt)*AddSpeed)
			dim DrawobjPosX:dim DrawobjPosY
			DrawobjPosX=hitobjDrawPos(cnt)
			DrawobjPosY=DispHeight/2-48/2-48+48*hitobjLaneID(cnt)

			switch hitobjType(cnt)
				//通常
					case HITOBJ_NORMAL
						DrawGraph DrawobjPosX,DrawobjPosY,hdxarr_Char_Slime((SceneCount/4)\9+hitobjLaneID(cnt)*9),TRUE
					swbreak
				//ホールド開始
					case HITOBJ_HOLDSTART
						DrawGraph DrawobjPosX,DrawobjPosY,hdxarr_Char_Slime_Hold(9*hitobjLaneID(cnt)+3*(SceneCount/4)\3),TRUE
					swbreak
				//ホールド終了
					case HITOBJ_HOLDEND
						DrawGraph DrawobjPosX,DrawobjPosY,hdxarr_Char_Slime_Hold(9*hitobjLaneID(cnt)+3*(SceneCount/4)\3+2),TRUE
						DrawExtendGraph hitobjDrawPos(cnt-1)+48,DrawobjPosY,DrawobjPosX,DrawobjPosY+48,hdxarr_Char_Slime_Hold(9*hitobjLaneID(cnt)+3*(SceneCount/4)\3+1),TRUE
					swbreak
			swend

			//オブジェクトが判定ラインに触れたタイミングの処理
				if PlayCountMS-hitobjTiming(cnt)>0 {
					//オートプレイ
					if AutoPlayFlag==TRUE {
						UpdateJudgeValue JUDGE_RES_EXCELLENT
						hitJudgeFlag(cnt)=TRUE
						LaneEffCount(hitobjLaneID(cnt))=0
						BombFlag(hitobjLaneID(cnt))=TRUE
						BombCount(hitobjLaneID(cnt))=0
						PlaySE hbasssnd(sndHitobj)
						if hitobjType(cnt)==HITOBJ_HOLDSTART {
							HoldFlag(hitobjLaneID(cnt))=TRUE
							HoldCount(hitobjLaneID(cnt))=0
						}
						if hitobjType(cnt)==HITOBJ_HOLDEND {
							HoldFlag(hitobjLaneID(cnt))=FALSE
						}
					}
				}
			//見逃し判定
				if PlayCountMS-hitobjTiming(cnt)>JUDGE_WIDTH_MISS {
					UpdateJudgeValue JUDGE_RES_MISS
					hitJudgeFlag(cnt)=TRUE
					if hitobjType(cnt)==HITOBJ_HOLDSTART {
						hitJudgeFlag(cnt+1)=TRUE
						UpdateJudgeValue JUDGE_RES_MISS
					}
				}
		loop

	//理論値スコアの計算
		repeat hitobjMax
			if hitCountFlag(cnt)==TRUE :continue
			if PlayCountMS-hitobjTiming(cnt)>0 {
				mxmScore+hitScore(JUDGE_RES_EXCELLENT)
				if cnt==0 :mxmScore+bonusScore
				hitCountFlag(cnt)=TRUE
			}
		loop

	//終了判定
		stgClearEffFlag=TRUE
		repeat hitobjmax
			if hitJudgeFlag(cnt)==FALSE :stgClearEffFlag=FALSE
		loop

	//自機
		if SceneCount>25 {
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
			setease -64,100,ease_cubic_out
			EasePosX=getease(SceneCount-25,60)
			DrawGraph EasePosX,DispHeight/2-64/2,hdximg(iChar_Player),TRUE
		}

	//判定文字
		dim hJudgeimg
		if JudgeRes==JUDGE_RES_EXCELLENT {
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
		} else {
			//点滅
			if (SceneCount/2)\2==0 {
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,0
			} else {
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
			}
		}
		switch JudgeRes
			case JUDGE_RES_EXCELLENT:hJudgeimg=hdxarr_Judge((SceneCount/3)\3):swbreak
			case JUDGE_RES_GREAT:hJudgeimg=hdxarr_Judge(3):swbreak
			case JUDGE_RES_NICE:hJudgeimg=hdxarr_Judge(4):swbreak
			case JUDGE_RES_BAD:hJudgeimg=hdxarr_Judge(5):swbreak
			case JUDGE_RES_MISS:hJudgeimg=hdxarr_Judge(6+rnd(4)):swbreak
		swend
		if hJudgeimg!0 {
			setease 1.25,1,ease_cubic_out
			EaseWidth=int(150.0*geteasef(JudgeResCount,10))
			EaseHeight=int(32.0*geteasef(JudgeResCount,10))
			DrawExtendGraph 50,268,50+EaseWidth,268+EaseHeight,hJudgeimg,TRUE
		}

	//コンボ
		if curCombo>=10 {
			setease -32,0,ease_cubic_out
			EasePosX=getease(JudgeResCount,15)
			setease 150,256,ease_cubic_out
			EaseAlpha=getease(JudgeResCount,15)

			SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(JudgeResCount,15)
			DrawStringToHandle 50+EasePosX,220,str(curCombo),GetColor(255,255,255),hdxfont(fSQ_45)
			SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,getease(JudgeResCount,15)
			DrawGraph 50+EasePosX+strlen(str(curCombo))*48,235,hdximg(iUI_tx_Combo),TRUE
		}

	//バースト
		if hcbDraw!-1 {
			if comboBurstCount==0 {
				PlaySE hbasssnd(sndBurst)
			}
			EasePosX=0
			EaseAlpha=256
			if comboBurstCount<15 {
				setease -32,0,ease_cubic_out
				EasePosX=getease(comboBurstCount,15)
				setease 0,256,ease_cubic_out
				EaseAlpha=getease(comboBurstCount,15)
			}
			if comboBurstCount>70 {
				setease 0,32,ease_cubic_in
				EasePosX=getease(comboBurstCount-70,15)
				setease 256,0,ease_cubic_in
				EaseAlpha=getease(comboBurstCount-70,15)
			}
			if comboBurstCount>=0&comboBurstCount<=85 {
				SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,EaseAlpha
				DrawGraph 200+strlen(str(curCombo))*48+EasePosX,230,hcbDraw,TRUE
			}
		}

	//ホールドエフェクト
		SetDrawBlendMode DX_BLENDMODE_ADD,200
		repeat 3
			if HoldFlag(cnt)==TRUE {
				DrawGraph 200+48/2-128/2,DispHeight/2-48/2-48+48/2-128/2+48*cnt,hdxarr_HoldCharge(HoldCount(cnt)\80),TRUE
			}
		loop

	//爆発エフェクト
		SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
		repeat 3
			if BombFlag(cnt)==TRUE {
				if BombCount(cnt)>9 {
					BombFlag(cnt)=FALSE
				} else {
					DrawGraph 200+48/2-192/2,DispHeight/2-48/2-48+48/2-192/2+48*cnt,hdxarr_HitBomb(BombCount(cnt)),TRUE
					BombCount(cnt)++
				}
			}
		loop

	//歌詞
		sdim curLyrics
		repeat lyricsMax
			if PlayCountMS>lyricsTiming(cnt)-25 {
				curLyrics=lyricsString(cnt)
			}
		loop
		if bframeLyrics!curLyrics {
			updateLyricsCount=0
		} else {
			updateLyricsCount++
		}
		bframeLyrics=curLyrics
		setease 150,256,ease_cubic_out
		SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(updateLyricsCount,25)
		setease 16,0,ease_cubic_out
		DrawStringXCenterToHandle 0,DispHeight-180+getease(updateLyricsCount,25),curLyrics,DispWidth,GetColor(255,255,255),hdxfont(fNoto_m24)

	//暗転
		setease 256,200,ease_linear
		EaseAlpha=getease(SceneCount,25)
		if SceneCount>60*2 {
			setease 200,0,ease_linear
			EaseAlpha=getease(SceneCount-60*2,25)
		}
		SetDrawBlendMode DX_BLENDMODE_ALPHA,EaseAlpha
		DrawBox 0,0,DispWidth,DispHeight,GetColor(0,0,0),TRUE

	//開始時のムービー
		if SceneCount==20 {
			SeekMovieToGraph hdximg(iMovie_Start),0
			PlayMovieToGraph hdximg(iMovie_Start)
			PlaySE hbasssnd(sndStart)
			PlaySE hbasssnd(vocReady)
		}
		if SceneCount>20 {
			SetDrawBlendMode DX_BLENDMODE_ADD,256
			DrawGraph 0,0,hdximg(iMovie_Start),TRUE
		}

	//クリア演出
		if stgClearEffFlag==TRUE {
			//クリアの種類を判別
				if stgClearEffCount==0 {
					//初回処理
					dim stgClearType
					stgClearType=ID_Failed
					switch GaugeType
						case GAUGE_ASSIST		//アシストクリア
							if curGaugeVal>60.0 :stgClearType=ID_Clear
						swbreak
						case GAUGE_NORMAL		//クリア
							if curGaugeVal>70.0 :stgClearType=ID_Clear
						swbreak
						case GAUGE_HARD		//ハードクリア
							if curGaugeVal>=0.0 :stgClearType=ID_Clear
						swbreak
						case GAUGE_MADNESS		//マドネスクリア
							if curGaugeVal>=0.0 :stgClearType=ID_Clear
						swbreak
					swend
					if hitobjMax==curCombo :stgClearType=ID_Fullcombo
					if curScore==10000000 :stgClearType=ID_Allex

					dim stgEffMovieHWND
					switch stgClearType
						case ID_Failed:stgEffMovieHWND=hdximg(iMovie_stg_Failed):swbreak			//クリア失敗
						case ID_Clear:stgEffMovieHWND=hdximg(iMovie_stg_Clear):swbreak			//クリア
						case ID_Fullcombo:stgEffMovieHWND=hdximg(iMovie_stg_Fullcombo):swbreak	//フルコンボ
						case ID_Allex:stgEffMovieHWND=hdximg(iMovie_stg_ALLex):swbreak			//オールエクセレント
					swend
				}

			if stgClearEffCount==10 {
				//クリア演出の動画再生開始
				SeekMovieToGraph stgEffMovieHWND,0
				PlayMovieToGraph stgEffMovieHWND

				if stgClearType==ID_Failed {
					PlaySE hbasssnd(sndRes_Failed)
				} else {
					PlaySE hbasssnd(sndRes_Clear)
				}
			}
			if stgClearEffCount<=10 {
				setease 0,200,ease_linear
				SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(stgClearEffCount,10)
			} else {
				setease 200,256,ease_linear
				SetDrawBlendMode DX_BLENDMODE_ALPHA,getease(stgClearEffCount-60*3,15)
			}
			DrawBox 0,0,DispWidth,DispHeight,GetColor(0,0,0),TRUE
			if stgClearEffCount>=10 {
				SetDrawBlendMode DX_BLENDMODE_ADD,256
				DrawGraph 0,0,stgEffMovieHWND,FALSE

				setease 0.5,0,ease_linear
				BASS_ChannelSetAttribute hplaybgm,BASS_ATTRIB_VOL,tofloat(geteasef(stgClearEffCount-10,60*3+50))
			}

			if stgClearEffCount==60*3-25 :PlaySE hbasssnd(sndUI_Trans_In)
			if stgClearEffCount>=60*3-25 {
				//トランジション
					setease -DispWidth,0,ease_cubic_out
					EasePosX=getease(stgClearEffCount-60*3+25,50)
					setease DispHeight,0,ease_cubic_out
					EasePosY=getease(stgClearEffCount-60*3+25,50)
					SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
					DrawGraph EasePosX,EasePosY,hdximg(iTrans_In_L),TRUE

					setease DispWidth,0,ease_cubic_out
					EasePosX=getease(stgClearEffCount-60*3+25,50)
					setease -DispHeight,0,ease_cubic_out
					EasePosY=getease(stgClearEffCount-60*3+25,50)
					SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
					DrawGraph EasePosX,EasePosY,hdximg(iTrans_In_R),TRUE

					setease -DispWidth,0,ease_cubic_out
					EasePosX=getease(stgClearEffCount-60*3+25,25)
					setease DispHeight,0,ease_cubic_out
					EasePosY=getease(stgClearEffCount-60*3+25,25)
					SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
					DrawGraph EasePosX,EasePosY,hdximg(iTrans_Out_L),TRUE

					setease DispWidth,0,ease_cubic_out
					EasePosX=getease(stgClearEffCount-60*3+25,25)
					setease -DispHeight,0,ease_cubic_out
					EasePosY=getease(stgClearEffCount-60*3+25,25)
					SetDrawBlendMode DX_BLENDMODE_PMA_ALPHA,256
					DrawGraph EasePosX,EasePosY,hdximg(iTrans_Out_R),TRUE
			}
			if stgClearEffCount==60*3-25+50 {
				//リザルトへ
				curSceneID=ID_Result
				gosub*InitScene
				//変数初期化
				dim decideFlag
				dim decideFrameCount

				gosub*Scene_Init_Result
			}
			stgClearEffCount++
		}

	//パーティクル生成
		if SceneCount\10==0 {
			partline_PosX(partline_Max)=DispWidth
			partline_PosY(partline_Max)=rnd(DispHeight)
			partline_Speed(partline_Max)=20+rnd(20)
			partline_Flag(partline_Max)=TRUE
			partline_Max++
		}
		if SceneCount\120==0 {
			partfade_PosX(partfade_Max)=DispWidth
			partfade_Flag(partfade_Max)=TRUE
			partfade_Max++
		}

	//BGM再生開始
		if BGMPlayFlag==FALSE&PlayCountMS>chartBGMoffset {
			AddDebugConsole STYLE_NORMAL,"BGMの再生を開始"
			BASS_ChannelPlay hplaybgm
			BGMPlayFlag=TRUE
		}

	//グラフのキャプチャー
		repeat 270
			if SceneCount-60*5==int(double(chartCapturePt*cnt)/(1000.0/60.0)) {
				chartCaptureVal(cnt)=int(curGaugeVal)
			}
		loop

	//カウンタ(ms)
		PlayCountMS=GetNowCount()-PlayStartMS-1000*5
		;PlayCountMS=int(double(SceneCount)*1000.0/60.0)-1000*5
		JudgeResCount++
		comboBurstCount++
		repeat 3
			LaneEffCount(cnt)++
			HoldCount(cnt)++
		loop

	return