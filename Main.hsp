
//  __   __  _______  ______   _______             _______  ______   _______      ___  _______  _______  _______
// |  |_|  ||       ||      | |   _   |           |       ||    _ | |       |    |   ||       ||       ||       |
// |       ||   _   ||  _    ||  |_|  |   ____    |    _  ||   | || |   _   |    |   ||    ___||       ||_     _|
// |       ||  | |  || | |   ||       |  |____|   |   |_| ||   |_|| |  | |  |    |   ||   |___ |       |  |   |
//  |     | |  |_|  || |_|   ||       |           |    ___||    __ ||  |_|  |    |   ||    ___||      _|  |   |
// |   _   ||       ||       ||   _   |           |   |    |   |  |||       |   |    ||   |___ |     |_   |   |
// |__| |__||_______||______| |__| |__|           |___|    |___|  |||_______|   |____||_______||_______|  |___|

//(c) 2019-2021 PiPiTO Software.

//Official Webpage		https://pipito7273.github.io/
//Github Repository		https://github.com/PiPiTO7273/XODA-project
//Contact				pipito7273@gmail.com

//	-	ソースコードはオープンソース化されていますが、セキュリティ上の問題がある情報（サーバーに接続するユーザー名やパスワード）は
//		外部のソースコードにマクロとして定義されています。これらの情報が欠損している場合でも起動は可能ですが、全ての機能は利用できません。
//		全ての機能をテスト、デバッグするには開発メンバーに連絡し、該当のファイル"AdminKey.hsp"を入手してください。

//	-	開発メンバーの方へ
//		Portalアカウントに接続する際、以下のアカウントを使用してください。
//		ユーザー名	:	devuser
//		パスワード	:	password

#packopt hide 1

//----- モジュール -----
#include"hsp3utf.as"				//UTF-8対応ランタイム
#include"a2dp.hsp"					//Artlet2D + Artlet2D Plus
#include"DxLib.as"					//DXライブラリ
#include"mod_dxlibplus.hsp"			//DXライブラリ拡張モジュール
#include"bass.as"					//BASS Audio Library
#include"hspinet.as"				//hspinet プラグイン
#include"gm_crlf.hsp"				//改行コード変換モジュール
#include"llmod3/llmod3.hsp"			//llmod3基本モジュール
#include"llmod3/console.hsp"			//llmod3コンソール機能モジュール
#include"getProcess.hsp"				//プロセス一覧取得モジュール
#include"hspext.as"					//hspext プラグイン
#addition"AdminKey.hsp"				//セキュリティキー
#include"Symbol.hsp"				//マクロ定義
#include"Function_Default.hsp"		//基本命令・関数
#include"Function_MusicSelect.hsp"		//楽曲選択画面の命令・関数
#include"Function_Play.hsp"			//ゲームプレイ画面の命令・関数
#include"LoadResources.hsp"			//リソース処理関連のサブルーチン
#include"Launcher.hsp"				//ランチャー
#include"Scene_Splash.hsp"			//スプラッシュ（起動時の待機画面）
#include"Scene_Signin.hsp"			//サインイン
#include"Scene_ModeSelect.hsp"		//モード選択
#include"Scene_MusicSelect.hsp"		//楽曲選択
#include"Scene_Play.hsp"				//ゲームプレイ
#include"Scene_Result.hsp"			//リザルト
#include"Scene_Dialog.hsp"			//ダイアログ全般

//----- 起動開始 -----
*Startup

	gsel sMain,-1
	#if DebugConsoleWindow
		exist"Main.ax"
		if strsize!-1 {
			delete"Main.ax"
		}
		console
	#endif

	sdim ConsoleLogBuf

	//起動時のアスキーアート
	AddDebugConsole STYLE_COMMENT,"  __   __  _______  ______   _______ "
	AddDebugConsole STYLE_COMMENT," |  |_|  ||       ||      | |   _   |"
	AddDebugConsole STYLE_COMMENT," |       ||   _   ||  _    ||  |_|  |"
	AddDebugConsole STYLE_COMMENT," |       ||  | |  || | |   ||       |    XODA-Project"
	AddDebugConsole STYLE_COMMENT,"  |     | |  |_|  || |_|   ||       |    (c) 2019-"+gettime(0)+" PiPiTO Software."
	AddDebugConsole STYLE_COMMENT," |   _   ||       ||       ||   _   |"
	AddDebugConsole STYLE_COMMENT," |__| |__||_______||______| |__| |__|"
	AddDebugConsole STYLE_COMMENT,""
	AddDebugConsole STYLE_COMMENT,"::::::::::::::::::::::::::::::::::::: :::: ::: :: :  :   :    :\n\n"

	AddDebugConsole STYLE_NORMAL,"Startup..."

	AddDebugConsole STYLE_STATUS,"DISPLAY.WIDTH = "+DispWidth
	AddDebugConsole STYLE_STATUS,"DISPLAY.HEIGHT = "+DispHeight
	AddDebugConsole STYLE_STATUS,"BUILD.VERSION = "+BuildVersion_Major+"."+BuildVersion_Minor
	AddDebugConsole STYLE_STATUS,"SERVICE.HOST = "+RepHiddenWords(str(SERVICE_HTTP),"*")
	AddDebugConsole STYLE_STATUS,"SERVICE.KEY = "+RepHiddenWords(str(SERVICE_ENCKEY),"*")

	sdim authUserName
	sdim authPassword
	exist"Data/core_OnlineAuth.dat"
	if strsize!-1 {
		sdim authInfobuf,strsize
		notesel authInfobuf
		noteload"Data/core_OnlineAuth.dat"
		authUserName=GetINIvalue(authInfobuf,"ONLINEAUTH","ID")
		authPassword=GetINIvalue(authInfobuf,"ONLINEAUTH","KEY")
	}
	AddDebugConsole STYLE_NORMAL,"起動設定の読み込み完了"

	goto*Launcher_Ready

*Launcher_GameStart

	gsel sLauncher
	clrobj

	//DXライブラリ初期設定
	UpdateLauncherLog"しばらくお待ち下さい・・・"
	AddDebugConsole STYLE_NORMAL,"DXライブラリの初期化開始"
	SetOutApplicationLogValidFlag 0
	ChangeWindowMode TRUE
	SetGraphMode DispWidth,DispHeight,32
	SetAlwaysRunFlag TRUE
	SetWaitVSyncFlag TRUE
	if FullScreen==TRUE {
		chgdisp 1,DispWidth,DispHeight
		bgscr sMain,DispWidth,DispHeight,2,0,0
		mouse -1
	} else {
		screen sMain,DispWidth,DispHeight,2,ginfo(20)/2-DispWidth/2,ginfo(21)/2-DispHeight/2
	}
	SetUserWindow hwnd
	SetMainWindowText"XODA v"+BuildVersion_Major+"."+BuildVersion_Minor
	dxlib_Init
	if stat==-1 {
		AddDebugConsole STYLE_ERROR,"DXライブラリの初期化に失敗しました。"
		goto*StopError
	} else {
		AddDebugConsole STYLE_NORMAL,"DXライブラリの初期化完了"
		dim VerDXlib:dim VerDirectX:dim VerWin
		_GetSystemInfo varptr(VerDXlib),varptr(VerDirectX),varptr(VerWin)
		AddDebugConsole STYLE_NORMAL,"DXライブラリのバージョン : "+strf("%x",VerDXlib)
		AddDebugConsole STYLE_NORMAL,"DirectXのバージョン : "+VerDirectX
		AddDebugConsole STYLE_NORMAL,"実行環境のバージョン : "+VerWin
	}

	onexit*Exit

	//オンラインアップデート
	UpdateLauncherLog"オンラインアップデートの確認中"
	dim OfflineModeFlag
	WebAPI_Init sWebAPI
	netinit
	gosub*CheckOnlineUpdate

	//DXライブラリ初期化
	InitFontToHandle
	InitGraph

	//BASS初期化
	BASS_Init -1,44100,0,hwnd,0
	if stat==0 {
		AddDebugConsole STYLE_ERROR,"BASS Audio Libraryの初期化に失敗しました。"
	} else {
		AddDebugConsole STYLE_NORMAL,"BASS Audio Libraryの初期化完了"
	}
	dim hBGMpreview,256

	//各種読み込み処理
	UpdateLauncherLog"起動中・・・"
	gosub*LoadSoundEffects
	gosub*LoadFontData
	gosub*LoadImages

	UpdateLauncherLog"しばらくお待ち下さい・・・"
	gosub*OnlineSignin
	if onlineErrorFlag==TRUE :OfflineModeFlag=TRUE
	gosub*LoadDetailRecord

	//シーンID
	dim curSceneID
	curSceneID=ID_Splash
	//現在のFPS値5
	ddim curFPSval,1
	//フレームカウンタ
	dim FrameCount
	//セキュリティ情報の開示
	dim SecViewFlag
	//デバッグメニューのログのスクロール値
	dim DebugLogScr
	//リセットを行うフラグ
	dim onResetFlag
	//キーフラグ
	dim KeyFlag,256
	dim bfKeyFlag,256

	//////debug
	//読み込む譜面ファイル名
	gosub*InitScene

	gsel sLauncher,-1
	gsel sMain,1

*MainLoop

	SetDrawScreen DX_SCREEN_BACK
	ClearDrawScreen

	//キー判定
	repeat 256:KeyFlag(cnt)=CheckHitKey(cnt):loop

	//シーン別描画
	switch curSceneID
		case ID_Splash				//スプラッシュ
			gosub*Scene_Splash
		swbreak
		case ID_Signin				//サインイン
			gosub*Scene_Signin
		swbreak
		case ID_ModeSelect			//モード選択
			gosub*Scene_ModeSelect
		swbreak
		case ID_MusicSelect			//曲選択
			gosub*Scene_MusicSelect
		swbreak
		case ID_MusicSelect_Option	//曲選択のオプション
			gosub*Scene_MusicSelect_Option
		swbreak
		case ID_MusicSelect_Effect	//曲選択のエフェクト
			gosub*Scene_MusicSelect_Effect
		swbreak
		case ID_MusicSelect_OpenError	//曲選択エラー
			gosub*Scene_MusicSelect_OpenError
		swbreak
		case ID_Play				//プレイ
			gosub*Scene_Play
		swbreak
		case ID_Result				//リザルト
			gosub*Scene_Result
		swbreak
	swend

	repeat 256:bfKeyFlag(cnt)=KeyFlag(cnt):loop

	//FPS表示
	if FrameCount\4==0 {
		GetFPS:getdouble:curFPSval=refdval 
	}

	//カウンタ処理
	SceneCount++
	FrameCount++

	//デバッグ用遅延処理
		if bfKeyFlag(KEY_INPUT_F1)==FALSE&KeyFlag(KEY_INPUT_F1)==TRUE :DebugLogScr=0
		if bfKeyFlag(KEY_INPUT_F4)==FALSE&KeyFlag(KEY_INPUT_F4)==TRUE :DebugLogScr=0
		if KeyFlag(KEY_INPUT_TAB)==TRUE :WaitVSync 4
		if KeyFlag(KEY_INPUT_F1)==TRUE {
			//デバッグメニュー
			DrawDebugString 0,16*0,"XODA ver"+BuildVersion_Major+"."+BuildVersion_Minor
			DrawDebugString 0,16*1,"HD "+DispWidth+"x"+DispHeight+" ["+ginfo(20)+"x"+ginfo(21)+"]"
			DrawDebugString 0,16*3,"FPS : "+strf("%.3f",curFPSval)+" ["+strf("%.2f",1000.0/curFPSval)+"ms]"
			DrawDebugString 0,16*4,"SCENE : ID["+curSceneID+"]"
			DrawDebugString 0,16*5,"F:"+FrameCount+" , F(S):"+SceneCount

			//ログ
			sdim tmpstr
			tmpstr=cnvatos(ConsoleLogBuf)
			notesel tmpstr
			repeat 25
				noteget NoteLine,notemax-cnt+DebugLogScr
				DrawDebugString 0,16*12+(25-cnt)*16,NoteLine
			loop
			noteunsel
		}
		if KeyFlag(KEY_INPUT_F2)==TRUE :SecViewFlag=TRUE:else:SecViewFlag=FALSE
		if KeyFlag(KEY_INPUT_F4)==TRUE {
			//API情報
			DrawDebugString 0,16*0,"Portal Online"
			DrawDebugString 0,16*1,"TYPE : PHP.WebAPI"
			DrawDebugString 0,16*2,"HOST : "+SERVICE_HTTP
			DrawDebugString 0,16*3,"SSLKEY : "+RepHiddenWords(str(SERVICE_ENCKEY),"*")
			DrawDebugString 0,16*5,"APIkey_GetProfile = "+RepHiddenWords(str(APIkey_GetProfile),"*")
			DrawDebugString 0,16*6,"APIKey_SendProfile = "+RepHiddenWords(str(APIKey_SendProfile),"*")
			DrawDebugString 0,16*7,"APIkey_GetUpdate = "+RepHiddenWords(str(APIkey_GetUpdate),"*")
			DrawDebugString 0,16*8,"APIkey_GetGlobalRanking = "+RepHiddenWords(str(APIkey_GetGlobalRanking),"*")
			DrawDebugString 0,16*9,"APIkey_SendGlobalRanking = "+RepHiddenWords(str(APIkey_SendGlobalRanking),"*")
			DrawDebugString 0,16*10,"APIkey_SendNewRecord = "+RepHiddenWords(str(APIkey_SendNewRecord),"*")
			DrawDebugString 0,16*11,"APIkey_GetRecord = "+RepHiddenWords(str(APIkey_GetRecord),"*")

			//ログ
			sdim tmpstr
			tmpstr=WebAPILogBuf
			notesel tmpstr
			repeat 25
				noteget NoteLine,notemax-cnt+DebugLogScr
				DrawDebugString 0,16*12+(25-cnt)*16,NoteLine
			loop
			noteunsel
		}
		if KeyFlag(KEY_INPUT_F1)==TRUE|KeyFlag(KEY_INPUT_F4)==TRUE {
			DrawDebugString 0,DispHeight-16*2,"F1:デバッグ情報の表示 , F2:セキュリティ情報の表示 , F3:オートプレイを有効化 , F4:オンライン情報を表示"
			DrawDebugString 0,DispHeight-16*1,"TAB:進行速度を1/4にする , PAGE UP:ログを上にスクロール , PAGE DOWN:ログを下にスクロール"
		}
		if FrameCount\2==0 {
			if KeyFlag(KEY_INPUT_PGUP)==TRUE : DebugLogScr--
			if KeyFlag(KEY_INPUT_PGDN)==TRUE : DebugLogScr++
		}

	ScreenFlip

	await

	if onResetFlag==TRUE {
		gosub*ExitProg
		goto*Launcher_Ready
	}

	goto*MainLoop

*StopError
	AddDebugConsole STYLE_ERROR,"処理を全て停止しました。"
	AddDebugConsole STYLE_STATUS,"終了待機中"
	dxlib_End
	BASS_Free
	dialog"エラーが発生したため、実行中の全ての処理を停止しました。",1,"XODA"
	stop

*ExitProg
	gsel sMain,-1
	BASS_Free
	AddDebugConsole STYLE_NORMAL,"全ての処理を正常に終了しました。"
	AddDebugConsole STYLE_STATUS,"終了待機中"
	#ifndef _debug
	gosub*ExportLog
	#endif
	return

*Exit
	gosub*ExitProg
	dxlib_End
	end